{
  "compilerOptions": {
    // "incremental": true,//增量编译，可以加快编译速度
    // "tsBuildInfoFile": "./tsbuildinfo",//增量编译文件的存储位置，增量编译生成的文件是可以被删除的
    // "diagnostics": true,//打印诊断信息

    "target": "es5", //编译后代码的语言版本
    "module": "CommonJS",//生成什么样的模块标准
    // "outFile": "./app.js",//可以将多个互相依赖的文件生成一个文件，仅支持用在amd模块和system模块
    "lib": ["dom", "es5", "es6", "es7", "es2017", "es2018", "esnext"], //TS需要引入的库，一些声明文件的库
    "jsx": "react",    
    "allowJs": true,
    // "checkJs": true,
    "outDir": "./lib",
    // "rootDir": "./src",//指定输入文件目录、用于控制输出文件目录结构

    // "declaration": true,//是否自动生成声明文件
    // "declarationDir": "./types",//指定声明文件存放的目录
    // "emitDeclarationOnly": true,//只生成声明文件
    // "sourceMap": true,//生成目标文件的sourceMap
    // "declarationMap": true,//声明文件生成sourceMap
    // "typeRoots": [],//声明文件目录，默认位置是node_modules/@types
    // "types": [],//声明文件包 https://www.typescriptlang.org/zh/tsconfig#types

    "removeComments": true,//删除注释

    // "noEmit": true,//不输出任何文件
    // "noEmitOnError": true,//当发生错误的时候不输出任何文件

    // "noEmitHelpers": true,//当存在接口继承时，不生成helper函数,作用时可以减少编译后的代码体积,需额外安装ts-helpers
    // "importHelpers": true,//通过tslib引入helper函数,文件必须是模块,//需要安装This syntax requires an imported helper but module 'tslib' cannot be found.

    // "downlevelIteration": true,//降级遍历器的实现，target为（es3或es5）

    "strict": true, //开启所有严格的类型检查，如果开启默认下面的配置项都是true
    "moduleResolution": "Node",//模块解析策略,ts默认使用node解析策略
    // "alwaysStrict": true,//在代码中注入"use strict"
    // "noImplicitAny": true,//不允许隐式的any类型，函数参数必须要有显示的类型注解
    // "strictNullChecks":true ,//不允许把null、undefined赋值给其他类型变量
    // "strictFunctionTypes":true ,//不允许函数参数双向协变
    // "strictPropertyInitialization": true,//类的实例属性必须初始化
    // "strictBindCallApply": false, //严格的bind、call、apply检查
    // "noImplicitThis": false,//不允许this有隐式的any类型

    // "noUnusedLocals": false,//检查只声明未使用的局部变量
    // "noUnusedParameters": false,//检查未使用的函数参数
    // "noFallthroughCasesInSwitch": false,//防止switch语句贯穿,每个case都必须要有break
    // "noImplicitReturns": false,//每个分支都要要返回值
    // "resolveJsonModule": true,
    "esModuleInterop": true, //允许export = 导出，由import from或import = 导入，
    "typeRoots": ["node_modules/@types"],  
    // "allowUmdGlobalAccess": true,//允许在模块中访问umd全局变量
  
    // "baseUrl": "./",// 解析非相对模块的基地址，默认是当前路径
    // "paths": {
    //     "jquery":[demo-demode_modules/jquery/dist/jquery.slim.min.js"],
    // },//路径映射，相对于baseUrl,应用场景，比如我们有的时候不想使用某个包的默认导入版本，在这里就可以指定导入路径
    // "rootDirs": ["src"],

    // "listEmittedFiles": false,//打印输出文件
    // "listFiles": false,//打印编译的文件s
  },
  "exclude": [
    "node_modules",
  ],
  "include": ["src"]
}
